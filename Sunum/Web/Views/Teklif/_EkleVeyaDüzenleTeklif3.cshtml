@model TeklifModel
@{
    var varsayılanGridSayfaBüyüklüğü = EngineContext.Current.Resolve<Core.Domain.Genel.AdminAyarları>().VarsayılanGridSayfaBüyüklüğü;
    var gridSayfaBüyüklüğü = EngineContext.Current.Resolve<Core.Domain.Genel.AdminAyarları>().GridSayfaBüyüklükleri;
    ViewBag.Title = "Teklif Sektörü";
    Html.AktifMenuÖğesiSistemAdıBelirle("Teklif");
    CultureInfo tr = new CultureInfo("tr-TR");
}
@using System.Globalization;
@Html.ValidationSummary(true)
@Html.HiddenFor(m => m.Id)
<link href="~/Content/wizard/wizard.css" rel="stylesheet" />
<script src="~/Scripts/wizard/wizard.js"></script>
<style type="text/css">
    .k-numeric-wrap.k-state-default {
        padding-right: 0;
    }

    .k-numerictextbox {
        margin-right: 0 !important;
    }

    div .k-treeview {
        border-width: 0;
        background: 0 0;
        overflow: auto;
        white-space: normal;
    }

    .donut-wrapper {
        position: relative;
        width: 180px;
        height: 180px;
        background-color: #3f3f3f;
    }

    .donut-chart {
        width: 180px;
        height: 180px;
    }

    .wizard .tab-pane {
        padding-top: 0;
    }
    .k-grouping-row p {
        width: 100%;
    }
</style>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <section>
                            <div class="wizard">
                                <div class="wizard-inner">
                                    <ul class="nav nav-tabs" role="tablist">
                                        <li role="presentation" class="active" id="liYeniTeklif">
                                            <a href="#step1" data-toggle="tab" aria-controls="Teklif Bilgileri" role="tab" title="Teklif Bilgileri">
                                                <span class="round-tab">
                                                    <i class="glyphicon glyphicon-edit"></i>
                                                </span>
                                            </a>
                                        </li>
                                        <li role="presentation" class="disabled" id="liOperasyon">
                                            <a href="#step2" data-toggle="tab" aria-controls="Teklif Kalemleri" role="tab" title="Teklif Kalemleri">
                                                <span class="round-tab">
                                                    <i class="glyphicon glyphicon-copy"></i>
                                                </span>
                                            </a>
                                        </li>
                                        <li role="presentation" class="disabled" id="liKonfirme">
                                            <a href="#step3" data-toggle="tab" aria-controls="Konfirme Teklif" role="tab" title="Konfirme Teklif">
                                                <span class="round-tab">
                                                    <i class="glyphicon glyphicon-certificate"></i>
                                                </span>
                                            </a>
                                        </li>
                                        <li role="presentation" class="disabled" id="liBiten">
                                            <a href="#step4" data-toggle="tab" aria-controls="Tamamlanan Teklif" role="tab" title="Tamamlanan Teklif">
                                                <span class="round-tab">
                                                    <i class="glyphicon glyphicon-ok"></i>
                                                </span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                                <form role="form">
                                    <div class="tab-content">
                                        <div class="tab-pane active" role="tabpanel" id="step1">
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.Adı)
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor_(m => m.Adı)
                                                    @Html.ValidationMessageFor(m => m.Adı)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.Aciklama)
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor_(m => m.Aciklama)
                                                    @Html.ValidationMessageFor(m => m.Aciklama)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.UlkeId)
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor_(model => model.UlkeId, new SelectList(Model.Ulkeler, "Id", "Adı"))
                                                    <span id="sehir-loading-progress" style="display: none;">Lütfen bekleyiniz..</span>
                                                    @Html.ValidationMessageFor(m => m.UlkeId)
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor_(m => m.SehirId)
                                                </div>
                                                <div class="col-md-4">
                                                    @Html.DropDownListFor_(model => model.SehirId, new SelectList(Model.Sehirler, "Id", "Adı"))
                                                    @Html.ValidationMessageFor(m => m.SehirId)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.Konum)
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor_(m => m.Konum)
                                                    @Html.ValidationMessageFor(m => m.Konum)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.MekanAdı)
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor_(m => m.MekanAdı)
                                                    @Html.ValidationMessageFor(m => m.MekanAdı)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.ToplantıAdı)
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor_(m => m.ToplantıAdı)
                                                    @Html.ValidationMessageFor(m => m.ToplantıAdı)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.Kod)
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor_(m => m.Kod)
                                                    @Html.ValidationMessageFor(m => m.Kod)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.KurDolar)
                                                </div>
                                                <div class="col-md-4">
                                                    <script type="text/javascript">
                                                        function dolarKuruAl() {
                                                            var tDolar = $("#KurDolar");
                                                                $.ajax({
                                                                    cache: false,
                                                                    type: "GET",
                                                                    url: "@Html.Raw(Url.Action("DolarKuruAl", "Teklif"))",
                                                                    success: function (data) {
                                                                        tDolar.html('');
                                                                        tDolar.val(data);
                                                                        tDolar.value = data;
                                                                        tDolar.innerText = data;
                                                                        //tDolar.closest("span")[0].childNodes[0].title =data
                                                                        console.log(data);
                                                                    },
                                                                    error: function (xhr, ajaxOptions, thrownError) {
                                                                        alert('Dolar kuru alınırken hata oluştu.');
                                                                    }
                                                                });
                                                            }
                                                    </script>
                                                    <div class="input-group input-group-short">
                                                        @Html.EditorFor_(m => m.KurDolar, "TL")
                                                        <span class="input-group-btn">
                                                            <button id="imkb" name="dolar-kuru-kaydet" class="btn btn-primary" onclick="dolarKuruAl();return false;">
                                                                Dolar(IMKB)
                                                            </button>
                                                        </span>
                                                        @Html.ValidationMessageFor(m => m.KurDolar)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.KurEuro)
                                                </div>
                                                <div class="col-md-4">
                                                    <script type="text/javascript">
                                                        function euroKuruAl() {
                                                            var tEuro = $("#KurEuro");
                                                                $.ajax({
                                                                    cache: false,
                                                                    type: "GET",
                                                                    url: "@Html.Raw(Url.Action("EuroKuruAl", "Teklif"))",
                                                                    success: function (data) {
                                                                        tEuro.html('');
                                                                        tEuro.val(data);
                                                                        tEuro.value = data;
                                                                        tEuro.innerText = data;
                                                                        //tDolar.closest("span")[0].childNodes[0].title =data
                                                                        console.log(data);
                                                                    },
                                                                    error: function (xhr, ajaxOptions, thrownError) {
                                                                        alert('Euro kuru alınırken hata oluştu.');
                                                                    }
                                                                });
                                                            }
                                                    </script>
                                                    <div class="input-group input-group-short">
                                                        @Html.EditorFor_(m => m.KurEuro, "TL")
                                                        <span class="input-group-btn">
                                                            <button id="imkb" name="euro-kuru-kaydet" class="btn btn-primary" onclick="euroKuruAl(); return false;">
                                                                EURO(IMKB)
                                                            </button>
                                                        </span>
                                                    </div>
                                                    @Html.ValidationMessageFor(m => m.KurEuro)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.HizmetBedeli)
                                                </div>
                                                <div class="col-md-4">
                                                    @Html.EditorFor_(m => m.HizmetBedeli, "%")
                                                    @Html.ValidationMessageFor(m => m.HizmetBedeli)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.BaslamaTarihi)
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor_(m => m.BaslamaTarihi)
                                                    @Html.ValidationMessageFor(m => m.BaslamaTarihi)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.BitisTarihi)
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor_(m => m.BitisTarihi)
                                                    @Html.ValidationMessageFor(m => m.BitisTarihi)
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    @Html.LabelFor_(m => m.OpsiyonTarihi)
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.EditorFor_(m => m.OpsiyonTarihi)
                                                    @Html.ValidationMessageFor(m => m.OpsiyonTarihi)
                                                </div>
                                            </div>
                                            <ul class="list-inline pull-right">
                                                <li>
                                                    <button type="submit" class="btn btn-primary next-step">Kaydet ve Devam Et</button>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="tab-pane" role="tabpanel" id="step2">
                                            <div class="demo-section k-content">
                                                <div class="col-md-2">
                                                    <h4>Teklif Kalemleri</h4>
                                                    <div id="teklif-tree"></div>
                                                    <div class="donut-wrapper">
                                                        <div id="chart" class="donut-chart"></div>
                                                        <div class="inner-content"></div>
                                                    </div>
                                                </div>
                                                <div class="col-md-10">
                                                    <div id="katılımcı-düzenle" class="nav-tabs-custom">
                                                        <ul class="nav md-pills nav-justified pills-secondary">
                                                            @Html.RenderBootstrapTabHeader("tab-teklif", "Teklif", true)
                                                            @Html.RenderBootstrapTabHeader("hesap", "Hesaplamalar")
                                                        </ul>
                                                        <div class="tab-content">
                                                            @Html.RenderBootstrapTabContent("tab-teklif", @Teklif(), true)
                                                            @Html.RenderBootstrapTabContent("hesap", @Hesaplamalar())
                                                        </div>
                                                    </div>
                                                    @helper Teklif()
                                        {
                                            <div id="dropHere" class="grid" style="z-index:0;">
                                                <div id="teklif-grid"></div>
                                            </div>
            }
                                                    @helper Hesaplamalar()
                                        {

                                            <div id="hesapTable" class="hesapTable"></div>
            }
                                                </div>
                                            </div>
                                            <ul class="list-inline pull-right">
                                                <li>
                                                    <span id="teklif-sil" class="btn bg-red">
                                                        <i class="fa fa-trash-o"></i>
                                                        Sil
                                                    </span>
                                                </li>
                                                @Html.DeleteConfirmation("TeklifSil", "teklif-sil")
                                                <li><button type="button" class="btn btn-default prev-step">Önceki</button></li>
                                                <li>
                                                    <button type="button" class="btn btn-default" onclick="setLocation('@(Url.Action("TeklifKopyala",new { teklifId=Model.Id,durumu ="Konfirme" }))')">Konfirme Et</button>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="tab-pane" role="tabpanel" id="step3">
                                            <div class="demo-section k-content">
                                                <div class="col-md-2">
                                                    <h4>Teklif Kalemleri</h4>
                                                    <div id="teklif-tree2"></div>
                                                    <div class="donut-wrapper">
                                                        <div id="chart2" class="donut-chart"></div>
                                                        <div class="inner-content"></div>
                                                    </div>
                                                </div>
                                                <div class="col-md-10">
                                                    <div id="dropHere" class="grid" style="z-index:0;">
                                                        <div id="teklif-grid2"></div>
                                                    </div>
                                                </div>
                                            </div>
                                            <ul class="list-inline pull-right">
                                                <li>
                                                    <span id="teklif-sil2" class="btn bg-red">
                                                        <i class="fa fa-trash-o"></i>
                                                        Sil
                                                    </span>
                                                </li>
                                                @Html.DeleteConfirmation("TeklifSil", "teklif-sil2")
                                                <li><button type="button" class="btn btn-default prev-step">Önceki</button></li>
                                                <li>
                                                    <button type="button" class="btn btn-default" onclick="setLocation('@(Url.Action("TeklifKopyala",new { teklifId=Model.Id,durumu ="Tamamlandı" }))')">Tamamla</button>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="tab-pane" role="tabpanel" id="step4">
                                            <div class="demo-section k-content">
                                                <div class="col-md-2">
                                                    <h4>Teklif Kalemleri</h4>
                                                    <div id="teklif-tree3"></div>
                                                    <div class="donut-wrapper">
                                                        <div id="chart3" class="donut-chart"></div>
                                                        <div class="inner-content"></div>
                                                    </div>
                                                </div>
                                                <div class="col-md-10">
                                                    <div id="dropHere" class="grid" style="z-index:0;">
                                                        <div id="teklif-grid3"></div>
                                                    </div>
                                                </div>
                                            </div>
                                            <ul class="list-inline pull-right">
                                                <li><button type="button" class="btn btn-default prev-step">Önceki</button></li>
                                            </ul>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </section>
                    </div>
                    <script id="toolbartemplate" type="text/x-kendo-template">
                        <a href="@Url.Action("PdfTeklif", new {teklifId=Model.Id})" class="btn bg-purple pull-right">
                            <i class="fa fa-file-pdf-o"></i>
                            Teklif(Pdf)
                        </a>
                    </script>
                    <script id="toolbartemplate2" type="text/x-kendo-template">

                        <a href="@Url.Action("PdfTeklif", new {teklifId=Model.Id})" class="btn bg-purple pull-right">
                            <i class="fa fa-file-pdf-o"></i>
                            Teklif(Pdf)
                        </a>
                        <a href="@Url.Action("PdfRapor", new {teklifId=Model.Id})" class="btn bg-purple pull-right">
                            <i class="fa fa-file-pdf-o"></i>
                            Rapor(Pdf)
                        </a>
                    </script>
                    <script type="text/x-kendo-template" id="template">
                        <span><span id="count" class="count">#=items[0].Tparent #</span> <span>(#:count#) Parabirimi :#=items[0].ParabirimiDeger # </span></span>
                        <span style="float:right;"><input class="dropdowns" style="width: 110px!important" /></span>
                    </script>
                    <script>

                        $(document).ready(function () {
                            $(function () {
                                kendo.init($(document.body));
                            })
                            //wizard
                            if (@Model.Id<0) {
                                $("#liYeniTeklif").removeClass('disabled');
                                $("#liYeniTeklif").addClass('active');
                                $("#liOperasyon").removeClass('active');
                                $("#liKonfirme").removeClass('active');
                                $("#liBiten").removeClass('active');

                                $("#step1").addClass('active');
                                $("#step2").removeClass('active');
                                $("#step3").removeClass('active');
                                $("#step4").removeClass('active');
                            }
                            if (@Model.Id>0 &&@Model.Operasyon) {
                                $("#liOperasyon").removeClass('disabled');
                                $("#liOperasyon").addClass('active');
                                $("#liYeniTeklif").removeClass('active');
                                $("#liKonfirme").removeClass('active');
                                $("#liBiten").removeClass('active');

                                $("#step1").removeClass('active');
                                $("#step2").addClass('active');
                                $("#step3").removeClass('active');
                                $("#step4").removeClass('active');

                            }
                            if (@Model.Id>0 &&@Model.Konfirme) {
                                $("#liOperasyon").removeClass('disabled');
                                $("#liKonfirme").removeClass('disabled');
                                $("#liKonfirme").addClass('active');
                                $("#liYeniTeklif").removeClass('active');
                                $("#liOperasyon").removeClass('active');
                                $("#liBiten").removeClass('active');

                                $("#step1").removeClass('active');
                                $("#step2").removeClass('active');
                                $("#step3").addClass('active');
                                $("#step4").removeClass('active');
                            }
                            if (@Model.Id>0 &&@Model.Biten) {
                                $("#liOperasyon").removeClass('disabled');
                                $("#liKonfirme").removeClass('disabled');
                                $("#liBiten").removeClass('disabled');
                                $("#liBiten").addClass('active');
                                $("#liYeniTeklif").removeClass('active');
                                $("#liOperasyon").removeClass('active');
                                $("#liKonfirme").removeClass('active');

                                $("#step1").removeClass('active');
                                $("#step2").removeClass('active');
                                $("#step3").removeClass('active');
                                $("#step4").addClass('active');

                            }
                            //ülke seçimi
                            $(function () {
                                $("#UlkeId").change(function () {
                                    console.log("test");
                                    var selectedItem = $(this).val();
                                    var ddlSehir = $("#SehirId");
                                    var sehirProgress = $("#sehir-loading-progress");
                                    sehirProgress.show();
                                    $.ajax({
                                        cache: false,
                                        type: "GET",
                                        url: "@Html.Raw(Url.Action("SehirAlUlkeId", "Tanımlamalar"))",
                                        data: { "ulkeId": selectedItem },
                                        success: function (data) {
                                            ddlSehir.html('');
                                            $.each(data, function (id, option) {
                                                ddlSehir.append($('<option></option>').val(option.id).html(option.name));
                                            });
                                            sehirProgress.hide();
                                        },
                                        error: function (xhr, ajaxOptions, thrownError) {
                                            alert('Sehirler alınırken hata oluştu.');
                                            sehirProgress.hide();
                                        }
                                    });
                                });
                            });
                            //tree
                            var Ana = new kendo.data.HierarchicalDataSource({
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("TeklifTree", "Teklif"))",
                                        dataType: "json"
                                    }
                                },
                                schema: {
                                    model: {
                                        children: "items"
                                    }
                                }
                            });
                            treeitemid = 0;
                            $("#teklif-tree").kendoTreeView({
                                dragAndDrop: true,
                                dataSource: Ana,
                                moveSourceNode: false,
                                includeChildren: false,
                                dataTextField: ["adi", "adi"],
                                dataValueField: ["Id", "Id"],
                                dragstart: function (e) {
                                    if ($(e.sourceNode).parentsUntil(".k-treeview", ".k-item").length == 0) {
                                        e.preventDefault();
                                    }
                                    var tree = e.sender;
                                    var movingItem = tree.dataItem(e.sourceNode);
                                    treeitemid = movingItem.id;
                                },
                                drop: function (e, args) {
                                    if ($(e.sourceNode).parentsUntil(".k-treeview", ".k-item").length == 1) {
                                        e.preventDefault();
                                    }
                                },
                            });
                            $("#teklif-tree2").kendoTreeView({
                                dragAndDrop: true,
                                dataSource: Ana,
                                moveSourceNode: false,
                                includeChildren: false,
                                dataTextField: ["adi", "adi"],
                                dataValueField: ["Id", "Id"],
                                dragstart: function (e) {
                                    if ($(e.sourceNode).parentsUntil(".k-treeview", ".k-item").length == 0) {
                                        e.preventDefault();
                                    }
                                    var tree = e.sender;
                                    var movingItem = tree.dataItem(e.sourceNode);
                                    treeitemid = movingItem.id;
                                },
                                drop: function (e, args) {
                                    if ($(e.sourceNode).parentsUntil(".k-treeview", ".k-item").length == 1) {
                                        e.preventDefault();
                                    }
                                },
                            });
                            $("#teklif-tree3").kendoTreeView({
                                dragAndDrop: true,
                                dataSource: Ana,
                                moveSourceNode: false,
                                includeChildren: false,
                                dataTextField: ["adi", "adi"],
                                dataValueField: ["Id", "Id"],
                                dragstart: function (e) {
                                    if ($(e.sourceNode).parentsUntil(".k-treeview", ".k-item").length == 0) {
                                        e.preventDefault();
                                    }
                                    var tree = e.sender;
                                    var movingItem = tree.dataItem(e.sourceNode);
                                    treeitemid = movingItem.id;
                                },
                                drop: function (e, args) {
                                    if ($(e.sourceNode).parentsUntil(".k-treeview", ".k-item").length == 1) {
                                        e.preventDefault();
                                    }
                                },
                            });
                            //hazırlık
                            var dataSource = new kendo.data.DataSource({
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("BağlıTeklifListe", "Teklif",new { teklifId=Model.Id,grid="Hazırlık"}))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    update: {
                                        url: "@Html.Raw(Url.Action("BagliTeklifDuzenle", "Teklif"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("BagliTeklifSil", "Teklif"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    create: {
                                        url: "@Html.Raw(Url.Action("BağlıTeklifEkle", "Teklif"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    },
                                    parameterMap: function (data, operation) {
                                        if (operation != "read" && operation != "create") {
                                            var result = {};

                                            for (var i = 0; i < data.models.length; i++) {
                                                var entity = data.models[i];

                                                for (var member in entity) {
                                                    if (member == "AlisBirimFiyat" || member == "SatisBirimFiyat") {
                                                        //entity[member] = (entity[member].toString()).replace(",", ".")
                                                    }
                                                    result["ogeler[" + i + "]." + member] = entity[member];
                                                }
                                            }

                                            addAntiForgeryToken(result);
                                            console.log(result);
                                            return result;
                                        }
                                        else {
                                            addAntiForgeryToken(data);
                                            return data;
                                        }
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Toplam",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            TeklifId: { editable: false, type: "number" },
                                            Adı: { editable: false, type: "string" },
                                            Aciklama: { editable: true, type: "string" },
                                            Kod: { editable: false, type: "string" },
                                            Kurum: {},
                                            AlisAdet: { editable: true, type: "number" },
                                            Adet: { editable: true, type: "number" },
                                            Gun: { editable: true, type: "number" },
                                            AlisBirimFiyat: { editable: true, type: "decimal" },
                                            SatisBirimFiyat: { editable: true, type: "decimal" },
                                            Id: { editable: false, type: "number" },
                                            Tparent: { editable: false, type: "string" },
                                            Vparent: { editable: false, type: "number" },
                                            ParabirimiDeger: { editable: false, type: "string" },
                                            Kar: { editable: false, type: "string" },
                                            Gelir: { editable: false, type: "string" },

                                        }
                                    }
                                },
                                group: {
                                    field: "Vparent", aggregates: [
                                        { field: "Vparent", aggregate: "count", },
                                    ],
                                },

                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                batch: true,
                                pageSize: @(varsayılanGridSayfaBüyüklüğü),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: false
                            });
                            var teklifGrid= $("#teklif-grid").kendoGrid({
                                dataSource: dataSource,
                                toolbar: [
                                    { name: "save", text: "Kaydet" },
                                    { name: "cancel", text: "İptal Et" },
                                    { template: kendo.template($('#toolbartemplate').html()) }],
                                editable: {
                                    confirmation: "Bu öğeyi silmek istediğinizden emin misiniz?",
                                    mode: "incell"
                                },
                                scrollable: false,
                                resizable: true,
                                columns: [
                                    {
                                        field: "Adı",
                                        title: "Adı",
                                        width: 80,
                                        editable: false,
                                    },
                                    {
                                        field: "Aciklama",
                                        title: "Açıklama",
                                        width: 150,
                                        scrollable: true,
                                        resizable: true,
                                    },
                                    {
                                        field: "AlisAdet",
                                        title: "Alış Adet",
                                        width: 40,
                                    },
                                    {
                                        field: "Adet",
                                        title: "Satış Adet",
                                        width: 40
                                    }, {
                                        field: "Gun",
                                        title: "Gün",
                                        width: 50
                                    }, {
                                        field: "AlisBirimFiyat",
                                        title: "Alış Fiyat",
                                        width: 40,
                                        format: "{0:n2}"
                                    }, {
                                        field: "SatisBirimFiyat",
                                        title: "Satış Fiyat",
                                        width: 40,
                                        format: "{0:n2}"
                                    }, {
                                        command: { name: "destroy", text: "Sil" },
                                        title: "Sil",
                                        width: 10,
                                    }, {
                                        field: "Tparent",
                                        title: "Ana Başlık",
                                        hidden: true,
                                        width: 0,
                                    },
                                    {
                                        field: "Vparent",
                                        title:"Vparent",
                                        hidden: true,
                                        groupHeaderTemplate: kendo.template($("#template").html()),
                                        width: 0,
                                    }
                                ],
                                dataBound: function () {

                                    var template = kendo.template($("#template").html());
                                    var data = dataSource._data;

                                    var dd = $(".dropdowns").kendoDropDownList({
                                        dataSource: [
                                            { text: "Parabirimi", value: "1" },
                                            { text: "TL", value: "1" },
                                            { text: "USD", value: "2" },
                                            { text: "EURO", value: "3" },
                                        ],
                                        dataTextField: "text",
                                        dataValueField: "value",

                                        change: function (e) {
                                            var data = teklifGrid.dataSource.data();
                                            console.log(data);
                                            var itemSayisi = data.length;
                                            var result = {};
                                            var cntr = 0;
                                            for (i = 0; i < itemSayisi; i++) {
                                                var itemId = data[i].Id;
                                                var item = data.find(x => x.Id === itemId);
                                                var parent = $(this.element).closest("tr").find(".count")[0].innerHTML;
                                                console.log(parent);
                                                var value = this.value();
                                                if (item.Tparent == parent) {

                                                    item.Parabirimi = value;
                                                    var entity = item;
                                                    if (item.AlisBirimFiyat) {
                                                        item.AlisBirimFiyat = (item.AlisBirimFiyat.toString()).replace(",", ".")
                                                    }
                                                    if (item.SatisBirimFiyat) {
                                                        item.SatisBirimFiyat = (item.SatisBirimFiyat.toString()).replace(",", ".")
                                                    }
                                                    if (item.Gelir) {
                                                        item.Gelir = (item.Gelir.toString()).replace(",", ".")
                                                    }
                                                    result["ogeler[" + cntr + "].Id"] = item.Id;
                                                    result["ogeler[" + cntr + "].TeklifId"] = item.TeklifId;
                                                    result["ogeler[" + cntr + "].Adı"] = item.Adı;
                                                    result["ogeler[" + cntr + "].Aciklama"] = item.Aciklama;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyat"] = item.AlisBirimFiyat;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyatDolar"] = item.AlisBirimFiyatDolar;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyatEuro"] = item.AlisBirimFiyatEuro;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyat"] = item.SatisBirimFiyat;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyatDolar"] = item.SatisBirimFiyatDolar;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyatEuro"] = item.SatisBirimFiyatEuro;
                                                    result["ogeler[" + cntr + "].AlisFiyat"] = item.AlisFiyat;
                                                    result["ogeler[" + cntr + "].AlisFiyatDolar"] = item.AlisFiyatDolar;
                                                    result["ogeler[" + cntr + "].AlisFiyatEuro"] = item.AlisFiyatEuro;
                                                    result["ogeler[" + cntr + "].SatisFiyat"] = item.SatisFiyat;
                                                    result["ogeler[" + cntr + "].SatisFiyatDolar"] = item.SatisFiyatDolar;
                                                    result["ogeler[" + cntr + "].SatisFiyatEuro"] = item.SatisFiyatEuro;
                                                    result["ogeler[" + cntr + "].ToplamFiyat"] = item.ToplamFiyat;
                                                    result["ogeler[" + cntr + "].ToplamFiyatDolar"] = item.ToplamFiyatDolar;
                                                    result["ogeler[" + cntr + "].ToplamFiyatEuro"] = item.ToplamFiyatEuro;
                                                    result["ogeler[" + cntr + "].Kar"] = item.Kar;
                                                    result["ogeler[" + cntr + "].KarDolar"] = item.KarDolar;
                                                    result["ogeler[" + cntr + "].KarEuro"] = item.KarEuro;
                                                    result["ogeler[" + cntr + "].Gelir"] = item.Gelir;
                                                    result["ogeler[" + cntr + "].Adet"] = item.Adet;
                                                    result["ogeler[" + cntr + "].AlisAdet"] = item.AlisAdet;
                                                    result["ogeler[" + cntr + "].SatisAdet"] = item.AlisAdet;
                                                    result["ogeler[" + cntr + "].Gun"] = item.Gun;
                                                    result["ogeler[" + cntr + "].Kdv"] = item.Kdv;
                                                    result["ogeler[" + cntr + "].Parabirimi"] = value;
                                                    result["ogeler[" + cntr + "].Vparent"] = item.Vparent;
                                                    result["ogeler[" + cntr + "].Tparent"] = item.Tparent;
                                                    result["ogeler[" + cntr + "].Kurum"] = item.Kurum;
                                                    result["ogeler[" + cntr + "].treeItemId"] = item.treeItemId;
                                                    cntr++;
                                                    item.dirty = true;
                                                }
                                                teklifGrid.dataSource.read();
                                                tabloHesapla();
                                            }
                                            console.log(result);
                                            $.ajax({
                                                url: "/Teklif/BagliTeklifDuzenle",
                                                type: "POST",
                                                data: result,
                                                dataType: "json"
                                            });
                                            $("#teklif-grid").data("kendoGrid").setDataSource(teklifGrid.dataSource)
                                            $("#teklif-grid").data("kendoGrid").refresh();
                                        }

                                    }).data("kendoDropDownList");
                                    //dd.value('3');
                                    $('td').each(function () {
                                        $(this).addClass('ellipsisClass')
                                    })
                                },
                                editable: true
                            }).kendoDropTarget({ drop: onDrop }).data("kendoGrid");

                            function additionalData() {
                                var data = {
                                    treeItemId: treeitemid,
                                    teklifId: "@Html.Raw(Model.Id)"
                                };
                                addAntiForgeryToken(data);
                                return data;
                            };

                            function tabloHesapla() {
                                dataSource.fetch(function () {
                                    var data = dataSource.data();
                                    var alist = 0, satist = 0, alistdolar = 0, satistdolar = 0, alisteuro = 0, satisteuro = 0;
                                    var alisg = 0, satisg = 0, alisgdolar = 0, satisgdolar = 0, alisgeuro = 0, satisgeuro = 0;
                                    var el = $("#hesapTable")[0];
                                    var text = '<table class="table table-bordered table-hover table-striped" style="font-size: 9px;"><tbody>';
                                    for (var i = 0; i < data.length; i++) {

                                        var d = data[i];
                                        var d2 = data[i];

                                        if (data.length > i + 1)
                                            d2 = data[i + 1];
                                        else
                                            d2 == data[i];

                                        var AlisAdet = d.Adet;
                                        var Gun = d.Gun;
                                        if (d.AlisAdet != 0) {
                                            AlisAdet = d.AlisAdet;
                                        }
                                        alist = alist + d.AlisBirimFiyat * AlisAdet*Gun;
                                        satist = satist + d.SatisFiyat;
                                        alistdolar = alistdolar + (d.AlisBirimFiyatDolar * AlisAdet * Gun);
                                        satistdolar = satistdolar + d.SatisFiyatDolar;
                                        satisteuro = satisteuro + d.SatisFiyatEuro;
                                        alisteuro = alisteuro + (d.AlisBirimFiyatEuro * AlisAdet * Gun);

                                        alisg = alisg + (d.AlisBirimFiyat * AlisAdet * Gun);
                                        satisg = satisg + d.SatisFiyat;
                                        alisgdolar = alisgdolar + (d.AlisBirimFiyatDolar * AlisAdet * Gun);
                                        satisgdolar = satisgdolar + d.SatisFiyatDolar;
                                        satisgeuro = satisgeuro + d.SatisFiyatEuro;
                                        alisgeuro = alisgeuro + (d.AlisBirimFiyatEuro * AlisAdet * Gun);

                                        if (i == 0)
                                            text = text + "<tr><th>" + d.Tparent + "</th><th>AÇIKLAMA</th><th>ADET</th><th>ALIŞ FİYATI</th><th>ALIŞ TL TOPLAM</th><th>ALIŞ EURO TOPLAM</th><th>ALIŞ USD TOPLAM</th><th>SATIŞ FİYATI</th><th>SATIŞ TL TOPLAM</th><th>SATIŞ EURO TOPLAM</th><th>SATIŞ USD TOPLAM</th></tr>";
                                        text = text + "<tr><td>" + d.Adı + "</td><td class='ellipses' data-toggle='tooltip' data-placement='bottom' data-original-title=\'" + d.Aciklama + "\'>" + d.Aciklama + "</td><td>" + d.Adet + "</td><td>" + decimalConvert(parseFloat(d.AlisBirimFiyat)) + "TL" + "</td>\n<td>" + decimalConvert(parseFloat(d.AlisFiyat)) + "TL" + "</td>\n<td>" + decimalConvert(parseFloat(d.AlisFiyatEuro)) + "€" + "</td>\n<td>" + decimalConvert(parseFloat(d.AlisFiyatDolar)) + "$" + "</td><td>" + decimalConvert(parseFloat(d.SatisBirimFiyat)) + d.Parabirimi + "</td>\n<td>" + decimalConvert(parseFloat(d.SatisFiyat)) + "TL" + "</td>\n<td>" + decimalConvert(parseFloat(d.SatisFiyatEuro)) + "€" + "</td>\n<td>" + decimalConvert(parseFloat(d.SatisFiyatDolar)) + "$" + "</td></tr>";
                                        if (d.Vparent != d2.Vparent) {
                                            text = text + "<tr><th>" + d.Tparent + " TOPLAMI" + "</th><th colspan='3'></th><th>" + decimalConvert(parseFloat(alist)) + "TL" + "</th><th>" + decimalConvert(parseFloat(alisteuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(alistdolar)) + "$" + "</th><th></th><th>" + decimalConvert(parseFloat(satist)) + "TL" + "</th><th>" + decimalConvert(parseFloat(satisteuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(satistdolar)) + "$" + "</th>";
                                            text = text + "<tr><th>" + d2.Tparent + "</th><th>AÇIKLAMA</th><th>ADET</th><th>ALIŞ FİYATI</th><th>ALIŞ TL TOPLAM</th><th>ALIŞ EURO TOPLAM</th><th>ALIŞ USD TOPLAM</th><th>SATIŞ FİYATI</th><th>SATIŞ TL TOPLAM</th><th>SATIŞ EURO TOPLAM</th><th>SATIŞ USD TOPLAM</th></tr>";
                                            alist = 0, satist = 0, alistdolar = 0, satistdolar = 0, alisteuro = 0, satisteuro = 0;
                                        }
                                        if (data.length == i + 1) {
                                            text = text + "<tr><th>" + d.Tparent + " TOPLAMI" + "</th><th colspan='3'></th><th>" + decimalConvert(parseFloat(alist)) + "TL" + "</th><th>" + decimalConvert(parseFloat(alisteuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(alistdolar)) + "$" + "</th><th></th><th>" + decimalConvert(parseFloat(satist)) + "TL" + "</th><th>" + decimalConvert(parseFloat(satisteuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(satistdolar)) + "$" + "</th>";
                                            text = text + "<tr><th>GENEL TOPLAM" + "</th><th colspan='3'></th><th>" + decimalConvert(parseFloat(alisg)) + "TL" + "</th><th>" + decimalConvert(parseFloat(alisgeuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(alisgdolar)) + "$" + "</th><th></th><th>" + decimalConvert(parseFloat(satisg)) + "TL" + "</th><th>" + decimalConvert(parseFloat(satisgeuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(satisgdolar)) + "$" + "</th>";
                                        }
                                    }
                                    text = text + "</tbody></table>";
                                    alisg = 0, satisg = 0, alisgdolar = 0, satisgdolar = 0, alisgeuro = 0, satisgeuro = 0;
                                    el.innerHTML = text;
                                }
                                )};
                            tabloHesapla();

                            //konfirme
                            var dataSource2 = new kendo.data.DataSource({
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("BağlıTeklifListe", "Teklif", new { teklifId = Model.Id, grid = "Konfirme" }))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    update: {
                                        url: "@Html.Raw(Url.Action("BagliTeklifDuzenle", "Teklif"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("BagliTeklifSil", "Teklif"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    create: {
                                        url: "@Html.Raw(Url.Action("BağlıTeklifEkle", "Teklif"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    },
                                    parameterMap: function (data2, operation) {
                                        if (operation != "read" && operation != "create") {
                                            var result = {};

                                            for (var i = 0; i < data2.models.length; i++) {
                                                var entity2 = data2.models[i];

                                                for (var member in entity2) {
                                                    if (member == "AlisBirimFiyat" || member == "SatisBirimFiyat") {
                                                        //console.log(entity[member]);
                                                        //entity[member] = (entity[member].toString()).replace(",", ".")
                                                    }
                                                    result["ogeler[" + i + "]." + member] = entity2[member];
                                                }
                                            }

                                            addAntiForgeryToken(result);
                                            console.log(result);
                                            return result;
                                        }
                                        else {
                                            addAntiForgeryToken(data2);
                                            return data2;
                                        }
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Toplam",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            TeklifId: { editable: false, type: "number" },
                                            Adı: { editable: false, type: "string" },
                                            Aciklama: { editable: true, type: "string" },
                                            Kurum: {},
                                            AlisAdet: { editable: true, type: "number" },
                                            SatisAdet: { editable: true, type: "number" },
                                            Gun: { editable: true, type: "number" },
                                            AlisBirimFiyat: { editable: true, type: "decimal" },
                                            SatisBirimFiyat: { editable: true, type: "decimal" },
                                            ParaBirimi: {},
                                            Id: { editable: false, type: "number" },
                                            Tparent: { editable: false, type: "string" },
                                            Vparent: { editable: false, type: "number" },
                                            ParabirimiDeger: { editable: false, type: "string" },

                                        }
                                    }
                                },
                                group: {
                                    field: "Vparent", aggregates: [
                                        { field: "Vparent", aggregate: "count", },
                                    ],
                                },
                                requestEnd: function (e) {
                                    this.refresh;
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                batch: true,
                                pageSize: @(varsayılanGridSayfaBüyüklüğü),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            });
                            var teklifGrid2 = $("#teklif-grid2").kendoGrid({
                                dataSource: dataSource2,
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridSayfaBüyüklüğü)],
                                        @Html.Partial("_GridMesajları")
                                },
                                toolbar: [
                                    { name: "save", text: "Kaydet" },
                                    { name: "cancel", text: "İptal Et" },
                                    { template: kendo.template($('#toolbartemplate').html()) }],
                                editable: {
                                    confirmation: "Bu öğeyi silmek istediğinizden emin misiniz?",
                                    //bulk editing
                                    mode: "incell"
                                },
                                scrollable: false,
                                resizable: true,
                                columns: [
                                    {
                                        field: "Adı",
                                        title: "Adı",
                                        width: 80,
                                        editable: false,
                                    },
                                    {
                                        field: "Aciklama",
                                        title: "Açıklama",
                                        width: 150,
                                        scrollable: true,
                                        resizable: true,
                                    },
                                    {
                                        field: "AlisAdet",
                                        title: "Alış Adet",
                                        width: 40,
                                    },
                                    {
                                        field: "Adet",
                                        title: "Satış Adet",
                                        width: 40
                                    }, {
                                        field: "Gun",
                                        title: "Gün",
                                        width: 50
                                    }, {
                                        field: "AlisBirimFiyat",
                                        title: "Alış Fiyat",
                                        width: 40,
                                        format: "{0:n2}"
                                    }, {
                                        field: "SatisBirimFiyat",
                                        title: "Satış Fiyat",
                                        width: 40,
                                        format: "{0:n2}"
                                    }, {
                                        command: { name: "destroy", text: "Sil" },
                                        title: "Sil",
                                        width: 10,
                                    }, {
                                        field: "Tparent",
                                        title: "Ana Başlık",
                                        hidden: true,
                                        width: 0,
                                    },
                                    {
                                        field: "Vparent",
                                        title: "Vparent",
                                        hidden: true,
                                        groupHeaderTemplate: kendo.template($("#template").html()),
                                        width: 0,
                                    }

                                ],
                                dataBound: function () {

                                    var template = kendo.template($("#template").html());
                                    var data2 = dataSource._data;

                                    var dd = $(".dropdowns").kendoDropDownList({
                                        dataSource: [
                                            { text: "Parabirimi", value: "1" },
                                            { text: "TL", value: "1" },
                                            { text: "USD", value: "2" },
                                            { text: "EURO", value: "3" },
                                        ],
                                        dataTextField: "text",
                                        dataValueField: "value",
                                        change: function (e) {
                                            var data2 = teklifGrid2.dataSource.data();
                                            var itemSayisi = data2.length;
                                            var result = {};
                                            var cntr = 0;
                                            for (i = 0; i < itemSayisi; i++) {
                                                var itemId = data2[i].Id;
                                                var item = data2.find(x => x.Id === itemId);
                                                var parent = $(this.element).closest("tr").find(".count")[0].innerHTML;
                                                console.log(parent);
                                                var value = this.value();
                                                if (item.Tparent == parent) {
                                                    item.Parabirimi = value;
                                                    var entity = item;
                                                    if (item.AlisBirimFiyat) {
                                                        item.AlisBirimFiyat = (item.AlisBirimFiyat.toString()).replace(",", ".")
                                                    }
                                                    if (item.SatisBirimFiyat) {
                                                        item.SatisBirimFiyat = (item.SatisBirimFiyat.toString()).replace(",", ".")
                                                    }
                                                    if (item.Gelir) {
                                                        item.Gelir = (item.Gelir.toString()).replace(",", ".")
                                                    }
                                                    result["ogeler[" + cntr + "].Id"] = item.Id;
                                                    result["ogeler[" + cntr + "].TeklifId"] = item.TeklifId;
                                                    result["ogeler[" + cntr + "].Adı"] = item.Adı;
                                                    result["ogeler[" + cntr + "].Aciklama"] = item.Aciklama;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyat"] = item.AlisBirimFiyat;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyatDolar"] = item.AlisBirimFiyatDolar;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyatEuro"] = item.AlisBirimFiyatEuro;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyat"] = item.SatisBirimFiyat;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyatDolar"] = item.SatisBirimFiyatDolar;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyatEuro"] = item.SatisBirimFiyatEuro;
                                                    result["ogeler[" + cntr + "].AlisFiyat"] = item.AlisFiyat;
                                                    result["ogeler[" + cntr + "].AlisFiyatDolar"] = item.AlisFiyatDolar;
                                                    result["ogeler[" + cntr + "].AlisFiyatEuro"] = item.AlisFiyatEuro;
                                                    result["ogeler[" + cntr + "].SatisFiyat"] = item.SatisFiyat;
                                                    result["ogeler[" + cntr + "].SatisFiyatDolar"] = item.SatisFiyatDolar;
                                                    result["ogeler[" + cntr + "].SatisFiyatEuro"] = item.SatisFiyatEuro;
                                                    result["ogeler[" + cntr + "].ToplamFiyat"] = item.ToplamFiyat;
                                                    result["ogeler[" + cntr + "].ToplamFiyatDolar"] = item.ToplamFiyatDolar;
                                                    result["ogeler[" + cntr + "].ToplamFiyatEuro"] = item.ToplamFiyatEuro;
                                                    result["ogeler[" + cntr + "].Kar"] = item.Kar;
                                                    result["ogeler[" + cntr + "].KarDolar"] = item.KarDolar;
                                                    result["ogeler[" + cntr + "].KarEuro"] = item.KarEuro;
                                                    result["ogeler[" + cntr + "].Gelir"] = item.Gelir;
                                                    result["ogeler[" + cntr + "].Adet"] = item.Adet;
                                                    result["ogeler[" + cntr + "].AlisAdet"] = item.AlisAdet;
                                                    result["ogeler[" + cntr + "].SatisAdet"] = item.AlisAdet;
                                                    result["ogeler[" + cntr + "].Gun"] = item.Gun;
                                                    result["ogeler[" + cntr + "].Kdv"] = item.Kdv;
                                                    result["ogeler[" + cntr + "].Parabirimi"] = value;
                                                    result["ogeler[" + cntr + "].Vparent"] = item.Vparent;
                                                    result["ogeler[" + cntr + "].Tparent"] = item.Tparent;
                                                    result["ogeler[" + cntr + "].Kurum"] = item.Kurum;
                                                    result["ogeler[" + cntr + "].treeItemId"] = item.treeItemId;
                                                    cntr++;
                                                    item.dirty = true;
                                                }
                                                teklifGrid2.dataSource.read();

                                            }
                                            console.log(result);
                                            $.ajax({
                                                url: "/Teklif/BagliTeklifDuzenle",
                                                type: "POST",
                                                data: result,
                                                dataType: "json"
                                            });
                                            $("#teklif-grid2").data("kendoGrid").setDataSource(teklifGrid2.dataSource);
                                            $("#teklif-grid2").data("kendoGrid").refresh();
                                        }
                                    });

                                    $('td').each(function () {
                                        $(this).addClass('ellipsisClass')
                                    })
                                },
                                editable: false
                            }).kendoDropTarget({ drop: onDrop }).data("kendoGrid");

                             //tamamlandı
                            var dataSource3 = new kendo.data.DataSource({
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("BağlıTeklifListe", "Teklif", new { teklifId = Model.Id, grid = "Tamamlandı" }))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    update: {
                                        url: "@Html.Raw(Url.Action("BagliTeklifDuzenle", "Teklif"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("BagliTeklifSil", "Teklif"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    create: {
                                        url: "@Html.Raw(Url.Action("BağlıTeklifEkle", "Teklif"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    },
                                    parameterMap: function (data3, operation) {
                                        if (operation != "read" && operation != "create") {
                                            var result = {};

                                            for (var i = 0; i < data3.models.length; i++) {
                                                var entity = data3.models[i];

                                                for (var member3 in entity) {
                                                    /*if (member == "AlisBirimFiyat" || member == "SatisBirimFiyat") {
                                                        console.log("test:"+entity[member]);
                                                       // entity[member] = (entity[member].toString()).replace(",", ".")
                                                    }*/
                                                    result["ogeler[" + i + "]." + member3] = entity[member3];
                                                }
                                            }

                                            addAntiForgeryToken(result);
                                            console.log(result);
                                            return result;
                                        }
                                        else {
                                            addAntiForgeryToken(data3);
                                            return data3;
                                        }
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Toplam",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            TeklifId: { editable: false, type: "number" },
                                            SatisBirimFiyat: { editable: true, type: "decimal" },
                                            AlisBirimFiyat: { editable: true, type: "decimal" },
                                            Adı: { editable: false, type: "string" },
                                            Aciklama: { editable: true, type: "string" },
                                            Kurum: {},
                                            Adet: { editable: true, type: "number" },
                                            Gun: { editable: true, type: "number" },
                                            ParaBirimi: {},
                                            Id: { editable: false, type: "number" }
                                        }
                                    }
                                },
                                group: {
                                    field: "Vparent", aggregates: [
                                        { field: "Vparent", aggregate: "count", },
                                    ],
                                },
                                requestEnd: function (e) {
                                    this.refresh;
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                batch: true,
                                pageSize: @(varsayılanGridSayfaBüyüklüğü),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            });
                            var grid3 = $("#teklif-grid3").kendoGrid({
                                dataSource: dataSource3,
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridSayfaBüyüklüğü)],
                                        @Html.Partial("_GridMesajları")
                                },
                                toolbar: [
                                    { name: "save", text: "Kaydet" },
                                    { name: "cancel", text: "İptal Et" },
                                    { template: kendo.template($('#toolbartemplate2').html()) }],
                                editable: {
                                    confirmation: "Bu öğeyi silmek istediğinizden emin misiniz?",
                                    //bulk editing
                                    mode: "incell"
                                },
                                scrollable: false,
                                resizable: true,
                                columns: [
                                    {
                                        field: "Adı",
                                        title: "Adı",
                                        width: 80,
                                        editable: false,
                                    },
                                    {
                                        field: "Aciklama",
                                        title: "Açıklama",
                                        width: 150,
                                        scrollable: true,
                                        resizable: true,
                                    },
                                    {
                                        field: "AlisAdet",
                                        title: "Alış Adet",
                                        width: 40,
                                    },
                                    {
                                        field: "Adet",
                                        title: "Satış Adet",
                                        width: 40
                                    }, {
                                        field: "Gun",
                                        title: "Gün",
                                        width: 50
                                    }, {
                                        field: "AlisBirimFiyat",
                                        title: "Alış Fiyat",
                                        width: 40,
                                        format: "{0:n2}"
                                    }, {
                                        field: "SatisBirimFiyat",
                                        title: "Satış Fiyat",
                                        width: 40,
                                        format: "{0:n2}"
                                    }, {
                                        command: { name: "destroy", text: "Sil" },
                                        title: "Sil",
                                        width: 10,
                                    }, {
                                        field: "Tparent",
                                        title: "Ana Başlık",
                                        hidden: true,
                                        width: 0,
                                    },
                                    {
                                        field: "Vparent",
                                        title: "Vparent",
                                        hidden: true,
                                        groupHeaderTemplate: kendo.template($("#template").html()),
                                        width: 0,
                                    },
                                ],
                                dataBound: function () {

                                    var template = kendo.template($("#template").html());
                                    var data3 = dataSource._data;

                                    var dd = $(".dropdowns").kendoDropDownList({
                                        dataSource: [
                                            { text: "Parabirimi", value: "1" },
                                            { text: "TL", value: "1" },
                                            { text: "USD", value: "2" },
                                            { text: "EURO", value: "3" },
                                        ],
                                        dataTextField: "text",
                                        dataValueField: "value",
                                        change: function (e) {
                                            var data3 = teklifGrid3.dataSource.data();
                                            console.log(data3);
                                            var itemSayisi = data3.length;
                                            var result = {};
                                            var cntr = 0;
                                            for (i = 0; i < itemSayisi; i++) {
                                                var itemId = data[i].Id;
                                                var item = data.find(x => x.Id === itemId);
                                                var parent = $(this.element).closest("tr").find(".count")[0].innerHTML;
                                                console.log(parent);
                                                var value = this.value();
                                                if (item.Tparent == parent) {
                                                    item.Parabirimi = value;
                                                    var entity = item;
                                                    if (item.SatisBirimFiyat) {
                                                        item.SatisBirimFiyat = (item.SatisBirimFiyat.toString()).replace(",", ".")
                                                    }
                                                    if (item.Gelir) {
                                                        item.Gelir = (item.Gelir.toString()).replace(",", ".")
                                                    }
                                                    result["ogeler[" + cntr + "].Id"] = item.Id;
                                                    result["ogeler[" + cntr + "].TeklifId"] = item.TeklifId;
                                                    result["ogeler[" + cntr + "].Adı"] = item.Adı;
                                                    result["ogeler[" + cntr + "].Aciklama"] = item.Aciklama;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyat"] = item.AlisBirimFiyat;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyatDolar"] = item.AlisBirimFiyatDolar;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyatEuro"] = item.AlisBirimFiyatEuro;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyat"] = item.SatisBirimFiyat;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyatDolar"] = item.SatisBirimFiyatDolar;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyatEuro"] = item.SatisBirimFiyatEuro;
                                                    result["ogeler[" + cntr + "].AlisFiyat"] = item.AlisFiyat;
                                                    result["ogeler[" + cntr + "].AlisFiyatDolar"] = item.AlisFiyatDolar;
                                                    result["ogeler[" + cntr + "].AlisFiyatEuro"] = item.AlisFiyatEuro;
                                                    result["ogeler[" + cntr + "].SatisFiyat"] = item.SatisFiyat;
                                                    result["ogeler[" + cntr + "].SatisFiyatDolar"] = item.SatisFiyatDolar;
                                                    result["ogeler[" + cntr + "].SatisFiyatEuro"] = item.SatisFiyatEuro;
                                                    result["ogeler[" + cntr + "].ToplamFiyat"] = item.ToplamFiyat;
                                                    result["ogeler[" + cntr + "].ToplamFiyatDolar"] = item.ToplamFiyatDolar;
                                                    result["ogeler[" + cntr + "].ToplamFiyatEuro"] = item.ToplamFiyatEuro;
                                                    result["ogeler[" + cntr + "].Kar"] = item.Kar;
                                                    result["ogeler[" + cntr + "].KarDolar"] = item.KarDolar;
                                                    result["ogeler[" + cntr + "].KarEuro"] = item.KarEuro;
                                                    result["ogeler[" + cntr + "].Gelir"] = item.Gelir;
                                                    result["ogeler[" + cntr + "].Adet"] = item.Adet;
                                                    result["ogeler[" + cntr + "].AlisAdet"] = item.AlisAdet;
                                                    result["ogeler[" + cntr + "].SatisAdet"] = item.AlisAdet;
                                                    result["ogeler[" + cntr + "].Gun"] = item.Gun;
                                                    result["ogeler[" + cntr + "].Kdv"] = item.Kdv;
                                                    result["ogeler[" + cntr + "].Parabirimi"] = value;
                                                    result["ogeler[" + cntr + "].Vparent"] = item.Vparent;
                                                    result["ogeler[" + cntr + "].Tparent"] = item.Tparent;
                                                    result["ogeler[" + cntr + "].Kurum"] = item.Kurum;
                                                    result["ogeler[" + cntr + "].treeItemId"] = item.treeItemId;
                                                    cntr++;
                                                    item.dirty = true;
                                                }
                                                teklifGrid3.dataSource.read();
                                            }
                                            console.log(result);
                                            $.ajax({
                                                url: "/Teklif/BagliTeklifDuzenle",
                                                type: "POST",
                                                data: result,
                                                dataType: "json"
                                            });
                                            $("#teklif-grid3").data("kendoGrid").setDataSource(teklifGrid3.dataSource);
                                            $("#teklif-grid3").data("kendoGrid").refresh();
                                        }
                                    });

                                    $('td').each(function () {
                                        $(this).addClass('ellipsisClass')
                                    })
                                },
                                editable: true
                            }).kendoDropTarget({ drop: onDrop });

                            //chart hazırlık
                            var chart = $("#chart").data("kendoChart");
                            function onDrop(e) {
                                dataSource.transport.create();
                                dataSource.read();
                                $("#teklif-grid").data("kendoGrid").setDataSource(dataSource)
                                $("#teklif-grid").data("kendoGrid").refresh();
                            };

                            function createChart() {
                                $("#chart").kendoChart({
                                    dataSource: {
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("Chart", "Teklif",new { teklifId=Model.Id}))",
                                                dataType: "json"
                                            }
                                        }
                                    },
                                    title: {
                                        text: "Kalem Oranları"
                                    },
                                    legend: {
                                        position: "top",
                                        visible: false
                                    },
                                    seriesDefaults: {
                                        labels: {
                                            template: "#= category #",
                                            visible: true,
                                            background: "transparent"
                                        }
                                    },
                                    seriesDefaults: {
                                        type: "donut"
                                    },
                                    series: [{
                                        field: "count",
                                        categoryField: "ad",
                                        padding: 1
                                    }],
                                    tooltip: {
                                        visible: true,
                                        template: "#= category # - #= kendo.format('{0:P}', percentage) #"
                                    },
                                });
                            }
                            createChart();
                            //chart konfirme
                            var chart2 = $("#chart2").data("kendoChart");
                            function onDrop(e) {
                                dataSource.transport.create();
                                dataSource.read();
                                $("#teklif-grid2").data("kendoGrid").setDataSource(dataSource)
                                $("#teklif-grid2").data("kendoGrid").refresh();
                            };

                            function createChart2() {
                                $("#chart2").kendoChart({
                                    dataSource: {
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("Chart", "Teklif",new { teklifId=Model.Id}))",
                                                dataType: "json"
                                            }
                                        }
                                    },
                                    title: {
                                        text: "Kalem Oranları"
                                    },
                                    legend: {
                                        position: "top",
                                        visible: false
                                    },
                                    seriesDefaults: {
                                        labels: {
                                            template: "#= category #",
                                            visible: true,
                                            background: "transparent"
                                        }
                                    },
                                    seriesDefaults: {
                                        type: "donut"
                                    },
                                    series: [{
                                        field: "count",
                                        categoryField: "ad",
                                        padding: 1
                                    }],
                                    tooltip: {
                                        visible: true,
                                        template: "#= category # - #= kendo.format('{0:P}', percentage) #"
                                    },
                                });
                            }
                            createChart2();
                            //chart tamamlandı
                            var chart3 = $("#chart3").data("kendoChart");
                            function onDrop(e) {
                                dataSource.transport.create();
                                dataSource.read();
                                $("#teklif-grid3").data("kendoGrid").setDataSource(dataSource)
                                $("#teklif-grid3").data("kendoGrid").refresh();
                            };

                            function createChart3() {
                                $("#chart3").kendoChart({
                                    dataSource: {
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("Chart", "Teklif",new { teklifId=Model.Id}))",
                                                dataType: "json"
                                            }
                                        }
                                    },
                                    title: {
                                        text: "Kalem Oranları"
                                    },
                                    legend: {
                                        position: "top",
                                        visible: false
                                    },
                                    seriesDefaults: {
                                        labels: {
                                            template: "#= category #",
                                            visible: true,
                                            background: "transparent"
                                        }
                                    },
                                    seriesDefaults: {
                                        type: "donut"
                                    },
                                    series: [{
                                        field: "count",
                                        categoryField: "ad",
                                        padding: 1
                                    }],
                                    tooltip: {
                                        visible: true,
                                        template: "#= category # - #= kendo.format('{0:P}', percentage) #"
                                    },
                                });
                            }
                            createChart3();
                            //paraDDEditor
                            function paraDDEditor(container, options) {
                                $('<input required data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)
                                    .kendoDropDownList({
                                        autoBind: false,
                                        dataTextField: "paraAdı",
                                        dataValueField: "Id",
                                        dataSource: {
                                            data: [{ "paraAdı": "TL", "Id": 1 }, { "paraAdı": "USD", "Id": 2 }, { "paraAdı": "Euro", "Id": 3 }]
                                        }
                                    });
                            }
                            //firmaAutoCompleteEditor
                            function firmaAutoCompleteEditor(container, options) {
                                $('<input required data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)
                                    .kendoAutoComplete({
                                        dataSource: {
                                            transport: {
                                                read: {
                                                    url: "@Html.Raw(Url.Action("FirmalarListe", "Teklif"))",
                                                    dataType: "json",
                                                    type: "GET"
                                                }
                                            }
                                        },
                                        dataTextField: "FirmaAdı",
                                        dataValueField: "Id",
                                        filter: "contains",
                                        minLength: 1
                                    });
                            }
                        });
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>
