@model Teklif2Model
@{
    var varsayılanGridSayfaBüyüklüğü = EngineContext.Current.Resolve<Core.Domain.Genel.AdminAyarları>().VarsayılanGridSayfaBüyüklüğü;
    var gridSayfaBüyüklüğü = EngineContext.Current.Resolve<Core.Domain.Genel.AdminAyarları>().GridSayfaBüyüklükleri;
    ViewBag.Title = "Teklif Sektörü";
    Html.AktifMenuÖğesiSistemAdıBelirle("Teklif");
    bool hazırlık = false;
    bool konfirme = false;
    bool biten = false;
    var gridText = ""; gridText = @hazırlık ? "Hazırlık" : (konfirme ? "Konfirme" : "Tamamlandı");
}
<script src="@Url.Content("~/Scripts/kendo/2018.1.117/cultures/kendo.culture.tr-TR.min.js")"></script>
<script type="text/javascript">
    //chart hazırlık
    var chart = $("#chart").data("kendoChart");
    function onDrop(e) {
        dataSource.transport.create();
        $("#teklif-grid").data("kendoGrid").dataSource.read();
        $("#teklif-grid").data("kendoGrid").refresh();

    };
    var dataSource = new kendo.data.DataSource({
        autoSync: true,
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("BağlıTeklifListe", "Teklif2", new { teklifId = Model.Id }))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    update: {
                                        url: "@Html.Raw(Url.Action("BagliTeklifDuzenle", "Teklif2"))",
                                        type: "POST",
                                        dataType: "json",
                                        complete: function (e) {
                                            $("#teklif-grid").data("kendoGrid").dataSource.read();
                                        }
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("BagliTeklifSil", "Teklif2"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    create: {
                                        url: "@Html.Raw(Url.Action("BağlıTeklifEkle", "Teklif2"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    },
                                    parameterMap: function (data, operation) {
                                        if (operation != "read" && operation != "create") {
                                            var result = {};

                                            for (var i = 0; i < data.models.length; i++) {
                                                var entity = data.models[i];
                                                
                                                for (var member in entity) {
                                                    result["ogeler[" + i + "]." + member] = String(String(entity[member]).replace('.', ','));
                                                }
                                            }
                                            addAntiForgeryToken(result);
                                            console.log(result);
                                            return result;
                                        }
                                        else {
                                            addAntiForgeryToken(data);
                                            return data;
                                        }
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Toplam",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            TeklifId: { editable: false, type: "number" },
                                            Adı: { editable: false, type: "string" },
                                            Aciklama: { editable: true, type: "string" },
                                            Kod: { editable: false, type: "string" },
                                            Kurum: {},
                                            AlisAdet: { editable: true, type: "number" },
                                            Adet: { editable: true, type: "number" },
                                            Gun: { editable: true, type: "number" },
                                            AlisBirimFiyat: { editable: true, type: "decimal" },
                                            SatisBirimFiyat: { editable: true, type: "decimal" },
                                            Id: { editable: false, type: "number" },
                                            Tparent: { editable: false, type: "string" },
                                            Vparent: { editable: false, type: "number" },
                                            ParabirimiDeger: { editable: false, type: "string" },
                                            Kar: { editable: false, type: "string" },
                                            Gelir: { editable: false, type: "string" },
                                        }
                                    }
                                },
                                group: {
                                    field: "Vparent", aggregates: [
                                        { field: "Vparent", aggregate: "count", },
                                    ],
                                },

                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                batch: true,
                                pageSize: @(varsayılanGridSayfaBüyüklüğü),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: false
                            });


                            var teklifGrid = $("#teklif-grid").kendoGrid({
                                dataSource: dataSource,
                                toolbar: [
                                    { name: "save", text: "Kaydet" },
                                    { name: "cancel", text: "İptal Et" },
                                    { template: kendo.template(@Model.Biten > 0 ? $('#toolbartemplate2').html() : $('#toolbartemplate').html()) }],
                                editable: {
                                    confirmation: "Bu öğeyi silmek istediğinizden emin misiniz?",
                                    mode: "incell"
                                },
                                scrollable: false,
                                resizable: true,
                                columns: [
                                    {
                                        field: "Adı",
                                        title: "Adı",
                                        width: 80,
                                        editable: false,
                                    },
                                    {
                                        field: "Aciklama",
                                        title: "Açıklama",
                                        width: 150,
                                        scrollable: true,
                                        resizable: true,
                                    },
                                    {
                                        field: "AlisAdet",
                                        title: "Alış Adet",
                                        width: 40,
                                    },
                                    {
                                        field: "Adet",
                                        title: "Satış Adet",
                                        width: 40
                                    }, {
                                        field: "Gun",
                                        title: "Gün",
                                        width: 50
                                    }, {
                                        field: "AlisBirimFiyat",
                                        title: "Alış Fiyat",
                                        width: 40,
                                        editor: function (container, options) {
                                            $('<input name="' + options.field + '"/>')
                                                .appendTo(container)
                                                .kendoNumericTextBox({
                                                    culture: "tr-TR",
                                                    format: "{0:n2}",
                                                    spinners: true
                                                });
                                        },
                                        template: '#= kendo.toString(AlisBirimFiyat, "n2")#',
                                    }, {
                                        field: "SatisBirimFiyat",
                                        title: "Satış Fiyat",
                                        width: 40,
                                        editor: function (container, options) {
                                            $('<input name="' + options.field + '"/>')
                                                .appendTo(container)
                                                .kendoNumericTextBox({
                                                    culture: "tr-TR",
                                                    format: "{0:n2}",
                                                    spinners: false
                                                });
                                        },
                                        template: '#= kendo.toString(SatisBirimFiyat, "n2")#',
                                    }, {
                                        command: { name: "destroy", text: "Sil" },
                                        title: "Sil",
                                        width: 10,
                                    }, {
                                        field: "Tparent",
                                        title: "Ana Başlık",
                                        hidden: true,
                                        width: 0,
                                    },
                                    {
                                        field: "Vparent",
                                        title: "Vparent",
                                        hidden: true,
                                        groupHeaderTemplate: kendo.template($("#template").html()),
                                        width: 0,
                                    }
                                ],
                                dataBound: function () {

                                    var template = kendo.template($("#template").html());
                                    //var data = dataSource._data;

                                    var dd = $(".dropdowns").kendoDropDownList({
                                        dataSource: [
                                            { text: "Parabirimi", value: "1" },
                                            { text: "TL", value: "1" },
                                            { text: "USD", value: "2" },
                                            { text: "EURO", value: "3" },
                                        ],
                                        dataTextField: "text",
                                        dataValueField: "value",
                                        /*
                                        change: function (e) {
                                            var data = teklifGrid.dataSource.data();
                                            var itemSayisi = data.length;
                                            var result = {};
                                            var cntr = 0;
                                            for (i = 0; i < itemSayisi; i++) {
                                                var itemId = data[i].Id;
                                                var item = data.find(x => x.Id === itemId);
                                                var parent = $(this.element).closest("tr").find(".count")[0].innerHTML;
                                                var value = this.value();
                                                if (item.Tparent == parent) {

                                                    item.Parabirimi = value;
                                                    var entity = item;
                                                    result["ogeler[" + cntr + "].Id"] = item.Id;
                                                    result["ogeler[" + cntr + "].TeklifId"] = item.TeklifId;
                                                    result["ogeler[" + cntr + "].Adı"] = item.Adı;
                                                    result["ogeler[" + cntr + "].Aciklama"] = item.Aciklama;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyat"] = item.AlisBirimFiyat;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyatDolar"] = item.AlisBirimFiyatDolar;
                                                    result["ogeler[" + cntr + "].AlisBirimFiyatEuro"] = item.AlisBirimFiyatEuro;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyat"] = item.SatisBirimFiyat;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyatDolar"] = item.SatisBirimFiyatDolar;
                                                    result["ogeler[" + cntr + "].SatisBirimFiyatEuro"] = item.SatisBirimFiyatEuro;
                                                    result["ogeler[" + cntr + "].AlisFiyat"] = item.AlisFiyat;
                                                    result["ogeler[" + cntr + "].AlisFiyatDolar"] = item.AlisFiyatDolar;
                                                    result["ogeler[" + cntr + "].AlisFiyatEuro"] = item.AlisFiyatEuro;
                                                    result["ogeler[" + cntr + "].SatisFiyat"] = item.SatisFiyat;
                                                    result["ogeler[" + cntr + "].SatisFiyatDolar"] = item.SatisFiyatDolar;
                                                    result["ogeler[" + cntr + "].SatisFiyatEuro"] = item.SatisFiyatEuro;
                                                    result["ogeler[" + cntr + "].ToplamFiyat"] = item.ToplamFiyat;
                                                    result["ogeler[" + cntr + "].ToplamFiyatDolar"] = item.ToplamFiyatDolar;
                                                    result["ogeler[" + cntr + "].ToplamFiyatEuro"] = item.ToplamFiyatEuro;
                                                    result["ogeler[" + cntr + "].Kar"] = item.Kar;
                                                    result["ogeler[" + cntr + "].KarDolar"] = item.KarDolar;
                                                    result["ogeler[" + cntr + "].KarEuro"] = item.KarEuro;
                                                    result["ogeler[" + cntr + "].Gelir"] = item.Gelir;
                                                    result["ogeler[" + cntr + "].Adet"] = item.Adet;
                                                    result["ogeler[" + cntr + "].AlisAdet"] = item.AlisAdet;
                                                    result["ogeler[" + cntr + "].SatisAdet"] = item.AlisAdet;
                                                    result["ogeler[" + cntr + "].Gun"] = item.Gun;
                                                    result["ogeler[" + cntr + "].Kdv"] = item.Kdv;
                                                    result["ogeler[" + cntr + "].Parabirimi"] = value;
                                                    result["ogeler[" + cntr + "].Vparent"] = item.Vparent;
                                                    result["ogeler[" + cntr + "].Tparent"] = item.Tparent;
                                                    result["ogeler[" + cntr + "].Kurum"] = item.Kurum;
                                                    result["ogeler[" + cntr + "].treeItemId"] = item.treeItemId;
                                                    cntr++;
                                                }
                                                //tabloHesapla();
                                            }
                                            $.ajax({
                                                url: "/Teklif/BagliTeklifDuzenle",
                                                type: "POST",
                                                data: result,
                                                dataType: "json"
                                            });
                                            $("#teklif-grid").data("kendoGrid").setDataSource(dataSource)
                                            $("#teklif-grid").data("kendoGrid").refresh();
                                            teklifGrid.dataSource.read();
                                        }*/
                                    }).data("kendoDropDownList");
                                    //dd.value('3');
                                    $('td').each(function () {
                                        $(this).addClass('ellipsisClass')
                                    })
                                },
                                editable: true
    }).kendoDropTarget({ drop: onDrop }).data("kendoGrid");

    function numericEditor(container, options) {
        $('<input data-bind="value:' + options.field + '"/>')
            .appendTo(container)
            .kendoNumericTextBox({
                format: "{0:n3}",
                decimals: 2,
                step: 0.001
            });
    }

                            function additionalData() {
                                var data = {
                                    treeItemId: treeitemid,
                                    teklifId: "@Html.Raw(Model.Id)"
                                };
                                addAntiForgeryToken(data);
                                return data;
                            };

                            function tabloHesapla() {
                                dataSource.fetch(function () {
                                    var data = dataSource.data();
                                    var alist = 0, satist = 0, alistdolar = 0, satistdolar = 0, alisteuro = 0, satisteuro = 0;
                                    var alisg = 0, satisg = 0, alisgdolar = 0, satisgdolar = 0, alisgeuro = 0, satisgeuro = 0;
                                    var el = $("#hesapTable")[0];
                                    var text = '<table class="table table-bordered table-hover table-striped" style="font-size: 9px;"><tbody>';
                                    for (var i = 0; i < data.length; i++) {

                                        var d = data[i];
                                        var d2 = data[i];

                                        if (data.length > i + 1)
                                            d2 = data[i + 1];
                                        else
                                            d2 == data[i];

                                        var AlisAdet = d.Adet;
                                        var Gun = d.Gun;
                                        if (d.AlisAdet != 0) {
                                            AlisAdet = d.AlisAdet;
                                        }
                                        alist = alist + d.AlisBirimFiyat * AlisAdet * Gun;
                                        satist = satist + d.SatisFiyat;
                                        alistdolar = alistdolar + (d.AlisBirimFiyatDolar * AlisAdet * Gun);
                                        satistdolar = satistdolar + d.SatisFiyatDolar;
                                        satisteuro = satisteuro + d.SatisFiyatEuro;
                                        alisteuro = alisteuro + (d.AlisBirimFiyatEuro * AlisAdet * Gun);

                                        alisg = alisg + (d.AlisBirimFiyat * AlisAdet * Gun);
                                        satisg = satisg + d.SatisFiyat;
                                        alisgdolar = alisgdolar + (d.AlisBirimFiyatDolar * AlisAdet * Gun);
                                        satisgdolar = satisgdolar + d.SatisFiyatDolar;
                                        satisgeuro = satisgeuro + d.SatisFiyatEuro;
                                        alisgeuro = alisgeuro + (d.AlisBirimFiyatEuro * AlisAdet * Gun);

                                        if (i == 0)
                                            text = text + "<tr><th>" + d.Tparent + "</th><th>AÇIKLAMA</th><th>ADET</th><th>ALIŞ FİYATI</th><th>ALIŞ TL TOPLAM</th><th>ALIŞ EURO TOPLAM</th><th>ALIŞ USD TOPLAM</th><th>SATIŞ FİYATI</th><th>SATIŞ TL TOPLAM</th><th>SATIŞ EURO TOPLAM</th><th>SATIŞ USD TOPLAM</th></tr>";
                                        text = text + "<tr><td>" + d.Adı + "</td><td class='ellipses' data-toggle='tooltip' data-placement='bottom' data-original-title=\'" + d.Aciklama + "\'>" + d.Aciklama + "</td><td>" + d.Adet + "</td><td>" + decimalConvert(parseFloat(d.AlisBirimFiyat)) + "TL" + "</td>\n<td>" + decimalConvert(parseFloat(d.AlisFiyat)) + "TL" + "</td>\n<td>" + decimalConvert(parseFloat(d.AlisFiyatEuro)) + "€" + "</td>\n<td>" + decimalConvert(parseFloat(d.AlisFiyatDolar)) + "$" + "</td><td>" + decimalConvert(parseFloat(d.SatisBirimFiyat)) + d.Parabirimi + "</td>\n<td>" + decimalConvert(parseFloat(d.SatisFiyat)) + "TL" + "</td>\n<td>" + decimalConvert(parseFloat(d.SatisFiyatEuro)) + "€" + "</td>\n<td>" + decimalConvert(parseFloat(d.SatisFiyatDolar)) + "$" + "</td></tr>";
                                        if (d.Vparent != d2.Vparent) {
                                            text = text + "<tr><th>" + d.Tparent + " TOPLAMI" + "</th><th colspan='3'></th><th>" + decimalConvert(parseFloat(alist)) + "TL" + "</th><th>" + decimalConvert(parseFloat(alisteuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(alistdolar)) + "$" + "</th><th></th><th>" + decimalConvert(parseFloat(satist)) + "TL" + "</th><th>" + decimalConvert(parseFloat(satisteuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(satistdolar)) + "$" + "</th>";
                                            text = text + "<tr><th>" + d2.Tparent + "</th><th>AÇIKLAMA</th><th>ADET</th><th>ALIŞ FİYATI</th><th>ALIŞ TL TOPLAM</th><th>ALIŞ EURO TOPLAM</th><th>ALIŞ USD TOPLAM</th><th>SATIŞ FİYATI</th><th>SATIŞ TL TOPLAM</th><th>SATIŞ EURO TOPLAM</th><th>SATIŞ USD TOPLAM</th></tr>";
                                            alist = 0, satist = 0, alistdolar = 0, satistdolar = 0, alisteuro = 0, satisteuro = 0;
                                        }
                                        if (data.length == i + 1) {
                                            text = text + "<tr><th>" + d.Tparent + " TOPLAMI" + "</th><th colspan='3'></th><th>" + decimalConvert(parseFloat(alist)) + "TL" + "</th><th>" + decimalConvert(parseFloat(alisteuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(alistdolar)) + "$" + "</th><th></th><th>" + decimalConvert(parseFloat(satist)) + "TL" + "</th><th>" + decimalConvert(parseFloat(satisteuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(satistdolar)) + "$" + "</th>";
                                            text = text + "<tr><th>GENEL TOPLAM" + "</th><th colspan='3'></th><th>" + decimalConvert(parseFloat(alisg)) + "TL" + "</th><th>" + decimalConvert(parseFloat(alisgeuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(alisgdolar)) + "$" + "</th><th></th><th>" + decimalConvert(parseFloat(satisg)) + "TL" + "</th><th>" + decimalConvert(parseFloat(satisgeuro)) + "€" + "</th><th>" + decimalConvert(parseFloat(satisgdolar)) + "$" + "</th>";
                                        }
                                    }
                                    text = text + "</tbody></table>";
                                    alisg = 0, satisg = 0, alisgdolar = 0, satisgdolar = 0, alisgeuro = 0, satisgeuro = 0;
                                    el.innerHTML = text;
                                }
                                )
                            };
                            tabloHesapla();
</script>